name: Copa Node Tally Sync app builder
on:
  workflow_dispatch:
    inputs:
      branch:
        description: "Branch to build"
        required: true
        default: dev
      bumpType:
        description: "Update type(major, minor, patch)"
        type: choice
        options:
          - major
          - minor
          - patch
        required: true
        default: patch
      changelog:
        required: false
        description: "Changelog to be included"
jobs:
  release:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            rust_target: x86_64-unknown-linux-gnu
          - os: macos-latest
            rust_target: x86_64-apple-darwin
          - os: macos-latest
            rust_target: aarch64-apple-darwin
          - os: windows-latest
            rust_target: x86_64-pc-windows-msvc
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: "bluecopa/tally-to-xl"
          ref: ${{ github.event.inputs.branch }}
          token: ${{ secrets.PAT }}
      # for projects that use labels and PRs,
      # try https://github.com/mikepenz/release-changelog-builder-action instead
      # TODO: use API to collect commit messages
      - name: Build Changelog
        id: build_changelog
        run: echo "changelog=${{github.event.inputs.changelog}}" >> $GITHUB_OUTPUT
      - name: Node.js setup
        uses: actions/setup-node@v3
        # NOTE: enterprise developers may hard code a version
        with:
          node-version: latest
          # node-version-file: '.nvmrc'
      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf
      - name: Print version
        run: echo ${{ needs.bump_version.outputs.version }}
      - name: Package into node binary
        run: npm i && npm run package 
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/release/mything
          asset_name: mything
          tag: ${{ github.ref }}
          overwrite: true
          body: "This is my release text"
