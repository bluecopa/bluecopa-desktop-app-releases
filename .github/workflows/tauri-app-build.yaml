name: Copa Desktop app builder
on:
  workflow_dispatch:
    inputs:
      branch:
        description: "Branch to build"
        required: true
        default: tauri
      bumpType:
        description: "Update type(major, minor, patch)"
        type: choice
        options:
          - major
          - minor
          - patch
        required: true
        default: patch
      changelog:
        required: true
        description: "Changelog to be included"
jobs:
  bump_version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.bump_version.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: "bluecopa/blui"
          ref: ${{ github.event.inputs.branch }}
          token: ${{ secrets.PAT }}
      - name: Node.js setup
        uses: actions/setup-node@v3
        # NOTE: enterprise developers may hard code a version
        with:
          node-version: latest
          # node-version-file: '.nvmrc'
      - name: Bump version
        id: bump_version
        run: |
          echo "version=$(npx -y run-func .public/getVersion.js getVersionParseRelease ${{ github.event.inputs.bumpType }})" >> $GITHUB_OUTPUT
      - name: Print version
        run: echo ${{steps.bump_version.outputs.version}}
  release:
    needs: bump_version
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            rust_target: x86_64-unknown-linux-gnu
          - os: macos-latest
            rust_target: x86_64-apple-darwin
          - os: macos-latest
            rust_target: aarch64-apple-darwin
          - os: windows-latest
            rust_target: x86_64-pc-windows-msvc
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: "bluecopa/blui"
          ref: ${{ github.event.inputs.branch }}
          token: ${{ secrets.PAT }}
      # for projects that use labels and PRs,
      # try https://github.com/mikepenz/release-changelog-builder-action instead
      # TODO: use API to collect commit messages
      - name: Build Changelog
        id: build_changelog
        run: echo "changelog=${{github.event.inputs.changelog}}" >> $GITHUB_OUTPUT
      - name: Node.js setup
        uses: actions/setup-node@v3
        # NOTE: enterprise developers may hard code a version
        with:
          node-version: latest
          # node-version-file: '.nvmrc'
      - name: Install Rust (Stable)
        run: curl https://sh.rustup.rs -sSf | sh -s -- -y
      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: "./src-tauri -> target"
      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 7
          run_install: false
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install web dependencies
        run: pnpm install
      - name: Navigate to tauri-app & Build web
        run: pwd && cd apps/tauri-app && pnpm build
      - name: Print version
        run: echo ${{ needs.bump_version.outputs.version }}
      - name: Build the app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          tagName: ${{ needs.bump_version.outputs.version }}
          releaseId: ${{needs.bump_version.outputs.version}}
          releaseName: "Bluecopa Desktop App ${{ needs.bump_version.outputs.version }}"
          releaseBody: |
            ${{steps.build_changelog.outputs.changelog}}
            See the assets to download this version and install.
          releaseDraft: false
          prerelease: false
